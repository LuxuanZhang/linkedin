电面就要准备一个most challenging project
1. nested array, 例如[1,2,[3,4,[5,],7],8,9]，要求一次性输出，直接iterator方法，本来还想着用generator，后来克制住没有作。

2. leetcode 20 Valid Parentheses，中间有个follow up，我一开始的程序是（、【、{逐一判断，大哥说我要是有500个不同的parentheses的表达怎么办？直接dictionary（hashmap）预存啊！

3. given a tree structrue {'s1':'()','s2:{s3:'{}'}','s4':''}, 判断这个given tree是否是valid tree（即里面的元素都是valid parentheses）

4. LC 244

5. Nearest p points of a given center. (最大堆。) 

6.  Maximum Subarray (LC)

7. Shortest Word Distance II (LC)

8. give a string containing ‘a’ to ‘z’, sort lexicographically. Example “ bbdda” - > “abbdd”

9. maximum sum subarray, product array

10. Find the Celebrity(LC)

11. 第一题： public boolean canPlaceFlowers(List flowerbed, int numberToPlace) 如果flowerbed当中为true，说明已经栽过花了，
附近两个不能再栽花。numberToPlace代表想再栽多少花到flowerbed里。让return是不是还能栽那么多谢花进去。 

第二题： public int distance (List words, String wordOne, String wordTwo) 给一个string list，可能存在重复，给两个word，
让return这两个word在list中的最短距离(index distance)  (CC150 chapter 18)
我的做法是维护一个hashmap，key是add进来的数，value是出现的次数。每次检查是否存在的时候遍历hashmap，
然后check当前的key: if (target - currentKey == currentKey && hashmap.get(currentKey) > 1) return true; 
if (hashmap.containsKey(target - currentkey)) { return true; } // else return false; 因为题目并没有要求返回哪两个数，
只要求检查是否存在。

第三题： 输入是一个array stream，在任何时候call你的method，给一个input value，
让返回之前输入过的数字有没有两个加起来等于这个value的（2sum稍稍变形）

12. rotate array

13. Reverse Word in a String II，
Validate Binary Search Tree。

14. Word Ladder I变形，要求输出一条最短路径，一不小心理解成Word Ladder II了，写了一白板code还不够。

15. 1. 有n个学生（编号为sid = ）依次走进有n个锁柜的房间（锁的编号为lockid = )，该学生将会打开或锁上lockid可以被sid整除的锁，
写一个打印所有在第n个学生操作后处于打开的状态的lockid。(完全平方数 builb switcher LC 319)
2. Shortest Word Distance II，需要处理word1和word2相同的情况，并需要注意该情况下list中只有一个word1的case

16. 12. 第一面东岸的国人gg 1. implement singleton pattern，要注意constrctor是private 
2. binary tree level order print，我用queue bfs做的，follow up是还有其他解法么，我说了可以用dfs 
第二面mtv的两个香港gg 1. search a number in a 2-d array，每行都是sorted的，每行第一个比前一行最后一个要大，
转换成一维的array做 search就行了。面试官说size=row*column-1如果overflow怎么办，我说把int改成long就好了。 
https://leetcode.com/problems/search-a-2d-matrix/
2. implement stack with pop(), push() and findmiddle() with O(1) time, 一开始我想用array做，
面试官提醒resize的时候会有额外操作，就改用double linked list了。维护两个pointer，top和middle。follow up就是test case。
用一个叫middle的pointer，findmiddle的时候就返回pointer，pop和push的时候要update middle的位置。

17. 第一道是triangle的，秒过，Pascal's Triangle
follow up：1. 输出array能组成triangle的数目。2. 输出所有的能组成的triangle。
time complexity，优化等。 

18. 给multidimensional array，给一个function， 输入这个array以及各个dimension上的index，可以output这个位置上的数字。 
写一个function，input是multidimensional array，以及array的dimensions，只能调用上面给的那个function，
输出这个array里面所有的数字的和。 用dfs做所有dimension上的不同index的combination，然后调用那个function求和

19. 电面第一题实现pow（a，b） 
第二题tree level traversal， follow up 是带间距的输出 

20. https://instant.1point3acres.com/thread/147424

21. 两个单词的最短距离 

22. 1. 判断string是不是valid number 2. Find an element in a rotated array 

23. retainedCache, 缓存满之后剔除最小rank的元素，类似于LRU cache，但是要简单一点，也是HashMap + list 搞定 

24. Nested Integer, follow up: reverse nested integer. 

25. 1. Leetcode 50 Pow(x, n) 
2. (LC 35)给了个排好序的数组, 找第一个比 target 大的数的数组的下标。比如 A = [1, 3, 5, 7], target = 0, 返回 0；target = 1 
返回 1； target = 2 返回 1 ; target = 6 返回 3； target = 8 也返回 0 
3. bonus 的问题 : Leetcode 205 Isomorphic Strings

26. find the index of first element greater than given target in sorted integer array. 
If all elements are no greater than the last element, wrap to position 0.
E.G sorted array = , target = 5, instead of return 6 = length_of_array, you need to return the first element (position 0). 
Same case for target = 7 in this arr…

27. https://instant.1point3acres.com/thread/159599

28. reverse nested integer sum 
two sum III (read heavy, write heavy 两套思路)

29. 比如说 ==和equals的区别；2者分别什么时候用；如果override equals的话，还要override什么其他方法吗？如果equals返回true，
但是hashcode返回的int不一样，会有什么后果；接着问了一些OS的核心概念，比如说京城和线程的区别，2者的应用场景之类的

30. valid parenthness
maximum subarray 
Shortest Word Distance II 

31.让计算点击页面广告能获得的最多收入~~做题思路类似house robberI,II,

32. 一面：全程二分，sqrt, search in rotated array, 最后2sum结尾 
二面：union/ intersect list, 分别正常和iterate做； binary level， 用bfs和dfs， zigzag收尾

33. Shortest distance with duplicates

34. permutation I II

35. Design and implement a cache which has a capacity. Dump the lowest ranked element if the cache is full. 
然后就是追问怎么设计distributed cache system。 

36. Get maximum depth of a binary tree

37. sum of nested integer
reverse version

38.  bounded queue(consumer， producer ) 还问了一些基本概念，virtual memeory, thread, process 区别等。

39.  一个文件，有很多行string, 从里面提取所以valid的Ip address.

40. 





