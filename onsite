2x 写程序 1x 技术交流 1x 设计 1x 东家介绍

1. 罗马数字和拉丁数字的互相转换

2. 第一题，multi-sum count: 输入一个数组，和一个目标数字，求有多少种方式能够用数组里面的数字求和得到目标数字 
第二题，leaf print tree: 给一个树，每一轮把所有的叶子输出出来，并且假象拿掉，然后再次输出，再次假象拿掉叶节点，直到全树输出完成为止。要求不能改变树本身 

3. 技术交流： 这一轮是L家的特色轮了。是要求求职者以组里老人的身份，给两个以组里新人角色出现的面试官讲要一个自己做过的项目，
要求是讲完后两个“新人”可以对项目有足够的了解，一个上手干活了。 
这一轮对于之前在公司要已经带过新人的求职者要应该属于没有太多难度了。不过要注意把自己项目细节和黑话略去，
以方便“新人”学习和理解 

4. Isomorphic string (leetcode): 

5. Find smallest 100 numbers from a very long input. 两种算法，排序和min heap。
大部分时间花在给小哥解释为什么build heap是O(N) ， heapify是O(logN）

6. 1). 知道什么是tree吗？写个tree 的class。然后问Inorder traversal。先递归，然后问time/space complexity。
完了之后说如果不用递归如何实现。我说用栈，写了code，和以下这个基本一模一样（只是没有pushAllleft独立一个函数，
但请允许我继续用这个来解释说明），然后国人大哥说你在while loop外和里分别call了“pushAllleft”， 
这是不简洁的，现在只允许在while loop里调用一次pushAllLeft，当时比较紧张，给出了两种方案，
不过需要在while loop里做一些特殊判断，他一直不满意，虽然有提示他的思路但是我到最后也没有给出他想要的。
大概总共20分钟左右说换下一题。 
2). Single Valid Tree，这个题刚查了一下似乎只有career cup上有，
之前我没有见过，因为大家（包括给我refer的朋友，还有我自己看面经）都说linkedin有题库重复度特高，
所以我最后一周也主要是以准备linkedin题库里的题，和system design为主。这个题我是用hash做的。
我是先列出了三种反例的test cases，然后大概写code（面试官说主要看思路，code不用写得很详细）。
国人大哥从一开始就似乎比较不喜欢hash的做法，一直觉得这个不work，一直质疑。我第一次写完也没有后续再遍历，
用自己的test cases检验的时候竟然也没发现对一种特例（有环，而且不联通）不work，后来是白人小哥发现了这个问题，
但是已经没有时间了不让继续做了就让问问题，但我还是说可以遍历一遍看是否有环（其实更好的说法是看遍历一遍是否能遍历到所有的点），
国人大哥说即便这个work你这个太麻烦了，用了很多extra space还要很多特殊判断。。。问问题吧

7. Convex hull

8. Is all character in SringB appeared in StringA。

9. 基础题：假设a == b，什么情况下 ++a != ++b，只考虑single thread。在往disk写数据时，一般prefer把small IO整合成big IO然后读写
，为什么？
两道算法题，很简单，都是鸡精原题。 Mirror Tree(leetcode),  TopK

10. sqrt(x). 改动是输入x是整数，输出要求是float。float啊请注意，二分搜索的range怎么搞，输出精度怎么控制，
稍微想一下啊同学们。然后怎么测。

11. interval类的问题
不是跟leetcode一样的题，但也差不多吧，merge，insert都有，也玩不出啥花儿来。
因为撸的太快了又说什么那每个interval带颜色属性，再要merge怎么整。然后OOD下class怎么写。

12. 给两个node找公共父节点, 只给两个node,但是node有父亲指针

13. 叶子脱落问题 和 merge interval 并且返回coverage问题(地理有原题)

14. max points in a line

15. LC text justification

16. 
